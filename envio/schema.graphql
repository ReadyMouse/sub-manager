type StableRentSubscription_OwnershipTransferred {
  id: ID!
  previousOwner: String!
  newOwner: String!
}

type StableRentSubscription_PaymentFailed {
  id: ID!
  subscriptionId: BigInt!
  senderAddress: String!
  senderId: BigInt!
  recipientId: BigInt!
  amount: BigInt!
  timestamp: BigInt!
  reason: String!
  failedCount: BigInt!
  # Blockchain metadata
  blockNumber: BigInt!
  transactionHash: String!
}

type StableRentSubscription_PaymentProcessed {
  id: ID!
  subscriptionId: BigInt!
  senderAddress: String!
  senderId: BigInt!
  recipientId: BigInt!
  amount: BigInt!
  processorFee: BigInt!
  processorFeeAddress: String!
  paymentCount: BigInt!
  timestamp: BigInt!
  nextPaymentDue: BigInt!
  # Blockchain metadata
  blockNumber: BigInt!
  transactionHash: String!
}

type StableRentSubscription_SubscriptionCancelled {
  id: ID!
  subscriptionId: BigInt!
  senderAddress: String!
  senderId: BigInt!
  recipientId: BigInt!
  timestamp: BigInt!
  reason: String!
  # Blockchain metadata
  blockNumber: BigInt!
  transactionHash: String!
}

type StableRentSubscription_SubscriptionCreated {
  id: ID!
  subscriptionId: BigInt!
  senderAddress: String!
  senderId: BigInt!
  recipientId: BigInt!
  amount: BigInt!
  interval: BigInt!
  nextPaymentDue: BigInt!
  endDate: BigInt!
  maxPayments: BigInt!
  serviceName: String!
  recipientAddress: String!
  senderCurrency: String!
  recipientCurrency: String!
  processorFee: BigInt!
  processorFeeAddress: String!
  processorFeeCurrency: String!
  processorFeeID: BigInt!
  timestamp: BigInt!
  # Blockchain metadata
  blockNumber: BigInt!
  transactionHash: String!
}

